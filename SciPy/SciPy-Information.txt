


SciPy Sub-Packages"

1) Integration:

scipy.integrate.quad(func, a, b, args=(), full_output=0, epsabs=1.49e-08, epsrel=1.49e-08, limit=50, points=None, weight=None, wvar=None, wopts=None, maxp1=50, limlst=50)
[source]
Compute a definite integral.
Integrate func from a to b (possibly infinite interval) using a technique from the Fortran library QUADPACK.

Integrate.quad(f,a,b)
integrate.dblquad()
integrate.tplquad()
integrate.nquad()

2) OPtimization:
It is the process to improve performance of a system mathematically by fine tuning the process parameters
scipy provides several algorithms:bfgs,Nelder-Mead simplex, Newton Conjugate gradient,COBYLA or SLSQP
    a)minimize function
        optimize.minimize(f,x0,method='bfgs')
    b)root finding, curve fitting
        root(f,x0,method='hybr')
        optimize.curve_fit(f,xdata,ydata)
        
3) Linear Algebra
    Inverse of matrix
    Finding Determinant
    Solve Linear Systems
    single value decomposition

4)Statistics 
   pdf(),cdf(), linregress(),describe(),normaltest()
5)Weave
   inclue c/C++ code
6) I/O: 
numpy.loadtxt()/savetxt()
numpy.genfromtxt()/.recfromcsv()
numpy.save()/load()
